// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "department_name", Type: field.TypeString},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:        "departments",
		Columns:     DepartmentsColumns,
		PrimaryKey:  []*schema.Column{DepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DiagnosesColumns holds the columns for the "diagnoses" table.
	DiagnosesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "department_id", Type: field.TypeInt, Nullable: true},
		{Name: "disease_id", Type: field.TypeInt, Nullable: true},
		{Name: "doctor_id", Type: field.TypeInt, Nullable: true},
		{Name: "patient_id", Type: field.TypeInt, Nullable: true},
	}
	// DiagnosesTable holds the schema information for the "diagnoses" table.
	DiagnosesTable = &schema.Table{
		Name:       "diagnoses",
		Columns:    DiagnosesColumns,
		PrimaryKey: []*schema.Column{DiagnosesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "diagnoses_departments_department_diagnose",
				Columns: []*schema.Column{DiagnosesColumns[1]},

				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "diagnoses_diseases_disease_diagnose",
				Columns: []*schema.Column{DiagnosesColumns[2]},

				RefColumns: []*schema.Column{DiseasesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "diagnoses_doctors_doctor_diagnose",
				Columns: []*schema.Column{DiagnosesColumns[3]},

				RefColumns: []*schema.Column{DoctorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "diagnoses_patients_patient_diagnose",
				Columns: []*schema.Column{DiagnosesColumns[4]},

				RefColumns: []*schema.Column{PatientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DiseasesColumns holds the columns for the "diseases" table.
	DiseasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "disease_name", Type: field.TypeString},
	}
	// DiseasesTable holds the schema information for the "diseases" table.
	DiseasesTable = &schema.Table{
		Name:        "diseases",
		Columns:     DiseasesColumns,
		PrimaryKey:  []*schema.Column{DiseasesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DoctorsColumns holds the columns for the "doctors" table.
	DoctorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "doctor_name", Type: field.TypeString},
		{Name: "doctor_password", Type: field.TypeString},
		{Name: "doctor_email", Type: field.TypeString},
		{Name: "doctor_tel", Type: field.TypeString},
	}
	// DoctorsTable holds the schema information for the "doctors" table.
	DoctorsTable = &schema.Table{
		Name:        "doctors",
		Columns:     DoctorsColumns,
		PrimaryKey:  []*schema.Column{DoctorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PatientsColumns holds the columns for the "patients" table.
	PatientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "patient_name", Type: field.TypeString},
		{Name: "patient_age", Type: field.TypeString},
		{Name: "patient_weight", Type: field.TypeString},
		{Name: "patient_height", Type: field.TypeString},
		{Name: "patient_prefix", Type: field.TypeString},
		{Name: "patient_gender", Type: field.TypeString},
		{Name: "patient_blood", Type: field.TypeString},
	}
	// PatientsTable holds the schema information for the "patients" table.
	PatientsTable = &schema.Table{
		Name:        "patients",
		Columns:     PatientsColumns,
		PrimaryKey:  []*schema.Column{PatientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DepartmentsTable,
		DiagnosesTable,
		DiseasesTable,
		DoctorsTable,
		PatientsTable,
	}
)

func init() {
	DiagnosesTable.ForeignKeys[0].RefTable = DepartmentsTable
	DiagnosesTable.ForeignKeys[1].RefTable = DiseasesTable
	DiagnosesTable.ForeignKeys[2].RefTable = DoctorsTable
	DiagnosesTable.ForeignKeys[3].RefTable = PatientsTable
}
